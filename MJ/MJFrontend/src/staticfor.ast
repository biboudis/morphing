PatternTypeVariable : TypeVariable;
VectorTypeVariable : PatternTypeVariable ::= MatchedVectorTypeVariable*;
MatchedVectorTypeVariable : PatternTypeVariable;

AllMatchingTypeVariable : PatternTypeVariable;
NonVoidType : TypeDecl;

PatternNameVariable ::= <ID:String>;

StaticForDecl : MemberDecl ::= IteratorDecl BodyDecl*;

StaticForConstructorDecl : ConstructorDecl ::= IteratorDecl;
StaticForMethodDecl : MethodDecl ::= IteratorDecl DecompiledAccess:Access* ;
ParStaticForMethodDecl : StaticForMethodDecl ::= ExpandedMethodDecl*; 
ExpandedMethodDecl : MethodDecl;

StaticForFieldDeclaration : FieldDeclaration ::=  IteratorDecl;

StaticForStmt : Stmt ::= IteratorDecl Stmt*;
StaticForStatement : Stmt ::= IteratorDecl Stmt;

IteratorDecl ::= PatternTypeParameter:TypeVariable* PatternNameParameter:PatternNameVariable* Pattern NestedPattern:Pattern*;
ParIteratorDecl : IteratorDecl;

Pattern ::= BaseSet;

OptMethodPattern : Pattern ::= Modifiers [TypeAccess:Access] <ID:String> Parameter:TypeAccess* Exception:Access*  [PatternMethodDecl];
OptNestedMethodPattern : OptMethodPattern ::= <IsPositive:boolean>;

OptFieldPattern : Pattern ::= Modifiers [TypeAccess:Access] <ID:String>;
OptNestedFieldPattern : OptFieldPattern ::= <IsPositive:boolean>;

MethodPattern : Pattern ::= Modifiers TypeAccess:Access <ID:String> Parameter:TypeAccess* Exception:Access*  [PatternMethodDecl];

FieldPattern : Pattern ::= Modifiers TypeAccess:Access <ID:String>;

NestedMethodPattern : MethodPattern ::= <IsPositive:boolean>;
NestedFieldPattern : FieldPattern ::= <IsPositive:boolean>;

TrueNestedPattern : Pattern;

BaseSet ::= TypeAccess:Access RefElmt;

RefElmt ::= <ElmtName:String>;

PatternMethodDecl : MethodDecl;

NegativeModifier : Modifier;
NoModifier : Modifier;

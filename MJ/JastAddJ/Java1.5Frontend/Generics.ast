// generic type declarations
GenericClassDecl : ClassDecl ::= Modifiers <ID:String> [SuperClassAccess:Access] Implements:Access* BodyDecl* TypeParameter:TypeVariable* ParTypeDecl:ParClassDecl*;
GenericInterfaceDecl : InterfaceDecl ::= Modifiers <ID:String> SuperInterfaceId:Access* BodyDecl* TypeParameter:TypeVariable* ParTypeDecl:ParInterfaceDecl*;

// parameterized type declarations
ParClassDecl : ClassDecl ::= Argument:Access* /[SuperClassAccess:Access]/ /Implements:Access*/ /BodyDecl*/;
RawClassDecl : ParClassDecl;

ParInterfaceDecl : InterfaceDecl ::= Argument:Access* /SuperInterfaceId:Access*/ /BodyDecl*/;
RawInterfaceDecl : ParInterfaceDecl;

// parameterized object instantiation
ParClassInstanceExpr : ClassInstanceExpr ::= TypeArgument:Access*;

// parameterized type access
ParTypeAccess : Access ::= TypeAccess:Access TypeArgument:Access*;

TypeVariable : ReferenceType ::= Modifiers <ID:String> BodyDecl* TypeBound:Access*;

abstract AbstractWildcard : Access;
Wildcard : AbstractWildcard;
WildcardExtends : AbstractWildcard ::= Access;
WildcardSuper : AbstractWildcard ::= Access;

abstract AbstractWildcardType : TypeDecl;
WildcardType : AbstractWildcardType;
WildcardExtendsType : AbstractWildcardType ::= Access;
WildcardSuperType : AbstractWildcardType ::= Access;

MethodDeclSubstituted : MethodDecl ::= <Original:MethodDecl>;
ConstructorDeclSubstituted : ConstructorDecl ::= <Original:ConstructorDecl>;
FieldDeclarationSubstituted : FieldDeclaration ::= <Original:FieldDeclaration>;

LUBType : ReferenceType ::= Modifiers <ID:String> BodyDecl* TypeBound:Access*;
WildcardsCompilationUnit : CompilationUnit;

BridgeMethodDecl : MethodDecl;

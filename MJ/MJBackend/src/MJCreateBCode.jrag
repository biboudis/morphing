aspect MJCreateBCode {
    public void StaticForStmt.createBCode(CodeGeneration gen) {
	//	super.createBCode(gen);
	// need to put attributes in the method about which bytes
	// to replicate.

	gen.addStaticForStmtBegin(getIteratorDecl()); //.signature());

	for ( int i=0; i<getNumStmt(); i++) {
	    try {
		getStmt(i).createBCode(gen);
	    } catch (Exception e) {
		e.printStackTrace();
		throw new Error("Error generating code for " + errorPrefix() + " " + getStmt(i));
	    }
	}

	gen.addStaticForStmtEnd();
    }

    public boolean TypeDecl.hasField(Identifier id) {
	if(!fields(id).isEmpty())
	    return true;
	/*
	for(int i = 0; i < getNumBodyDecl(); i++) {
	    if(getBodyDecl(i) instanceof FieldDeclaration) {
		FieldDeclaration decl = (FieldDeclaration)getBodyDecl(i);
		if(decl.name().equals(name))
		    return true;
	    }
	}
	*/
	return false;
    }	
}